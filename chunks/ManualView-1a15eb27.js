import{d as r,s,_ as c,r as n,o as i,c as m,f as h,a as t,h as u,v as p,e as l,w,g as $,F as g,i as y}from"./main-5aa425dc.js";import{A as V,M as L,a as N}from"./OManual.vue_vue_type_style_index_0_lang-e4d0026d.js";import{_ as A}from"./ComputedGamepads.vue_vue_type_script_lang-54fd9d2d.js";const T=r({name:"OManual",mixins:[A],components:{AMessage:V,MToolsNav:L,MGamepadList:N},data:()=>({mode:0,lock:!1,startDelay:0,duration:260,weakMagnitude:0,strongMagnitude:0}),methods:{start:function(){const e={startDelay:this.startDelay,duration:this.duration,weakMagnitude:this.weakMagnitude,strongMagnitude:this.strongMagnitude};s.dispatch("vibrate",e)},stop:function(){s.dispatch("setIsActive",!1),s.dispatch("setMode",0),s.dispatch("reset")},eventLoop:function(){this.updateComputed(),this.updateMode(),this.updatePattern(),this.handle()},updateMode:function(){this.gamepads.length>0&&(this.gamepads[0].device.buttons[1].pressed&&(this.lock=!this.lock),this.lock===!1&&(this.gamepads[0].device.buttons[0].pressed&&(this.mode=0),this.gamepads[0].device.buttons[2].pressed&&(this.mode=1),this.gamepads[0].device.buttons[3].pressed&&(this.mode=2)))},updatePattern:function(){this.gamepads.length>0&&this.lock===!1&&(this.mode===0&&(this.weakMagnitude=this.gamepads[0].device.buttons[7].value,this.strongMagnitude=this.gamepads[0].device.buttons[7].value),this.mode===1&&(this.weakMagnitude=0,this.strongMagnitude=this.gamepads[0].device.buttons[7].value),this.mode===2&&(this.weakMagnitude=this.gamepads[0].device.buttons[7].value,this.strongMagnitude=0))},handle:function(){this.gamepads.length>0&&this.gamepads.forEach(e=>{e.device.buttons[7].value>0||this.lock?this.start():this.stop()})}},mounted(){this.interval=window.setInterval(this.eventLoop,250)}}),B={class:"content-item app-manual"},C={class:"manual-form__input"},x=t("span",null,"Weak Magnitude",-1),D={class:"manual-form__input"},O=t("span",null,"Strong Magnitude",-1),G=y('<div class="manual-controls"><div><kbd>RT</kbd><span> — Vibrate</span></div><div><kbd>A</kbd><span> — Combined Mode</span></div><div><kbd>X</kbd><span> — Strong Mode</span></div><div><kbd>Y</kbd><span> — Light Mode</span></div><div><kbd>B</kbd><span> — Lock Intensity</span></div></div>',1);function I(e,a,v,M,f,_){const o=n("MToolsNav"),k=n("MGamepadList"),b=n("AMessage");return i(),m(g,null,[h(o),t("div",B,[t("label",C,[x,u(t("input",{"onUpdate:modelValue":a[0]||(a[0]=d=>e.weakMagnitude=d),type:"range",required:"",disabled:"",min:"0.0",max:"1.0",step:"0.01"},null,512),[[p,e.weakMagnitude]])]),t("label",D,[O,u(t("input",{"onUpdate:modelValue":a[1]||(a[1]=d=>e.strongMagnitude=d),type:"range",required:"",disabled:"",min:"0.0",max:"1.0",step:"0.01"},null,512),[[p,e.strongMagnitude]])]),G]),e.gamepads.length>0?(i(),l(k,{key:0,gamepads:e.gamepads},null,8,["gamepads"])):(i(),l(b,{key:1},{default:w(()=>[$("Press any gamepad button or connect a new gamepad to vibrate.")]),_:1}))],64)}const P=c(T,[["render",I]]),S=r({name:"ManualView",components:{OManual:P}}),q=t("h1",{class:"visually-hidden"},"Wavelovers — Manual",-1);function E(e,a,v,M,f,_){const o=n("OManual");return i(),m(g,null,[q,h(o)],64)}const R=c(S,[["render",E]]);export{R as default};
